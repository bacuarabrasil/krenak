version: 2

jobs:

  test:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.8.6
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
        environment:
          KRENAK_API_EMAIL_BACKEND: django.core.mail.backends.dummy.EmailBackend
          KRENAK_API_SECRET_KEY: stub
          KRENAK_API_USE_SENTRY: off
          KRENAK_API_DEBUG: off
          KRENAK_API_DATABASE_URL: postgresql://postgres:test_db_password@localhost/krenak_api_test_db
          KRENAK_API_CELERY_BROKER: redis://localhost:6379/1
          KRENAK_API_CELERY_TASK_ALWAYS_EAGER: on
      - image: postgres:12.4
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
        environment:
          POSTGRES_DB: krenak_api_test_db
          POSTGRES_PASSWORD: test_db_password
      - image: redis:6.0.6
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASS
    steps:
      - checkout
      - restore_cache:
          key: python-deps-v1-{{ checksum "api/requirements-dev.txt" }}
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv .env
            . .env/bin/activate
            pip install -U pip
            pip install -r api/requirements-dev.txt
      - save_cache:
          key: python-deps-v1-{{ checksum "api/requirements-dev.txt" }}
          paths:
            - ".env"
      - run:
          name: Check `black`
          command: . .env/bin/activate && fab test.black
      - run:
          name: Check `isort`
          command: . .env/bin/activate && fab test.isort
      - run:
          name: Check `pylama`
          command: . .env/bin/activate && fab test.pylama
      - run:
          name: Check `bandit`
          command: . .env/bin/activate && fab test.bandit
      - run:
          name: Check `safety`
          command: . .env/bin/activate && fab test.safety
      - run:
          name: Check `pylint`
          command: . .env/bin/activate && fab test.pylint
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Wait for Postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Run tests
          command: |
            . .env/bin/activate
            ./api/manage.py collectstatic --no-input
            fab test.run
      - store_test_results:
          path: ~/project/api/test-results

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
